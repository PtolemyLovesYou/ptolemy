sources:
  redis-observer:
    type: redis
    key: ptolemy_event
    data_type: channel
    url: redis://redis:6379
    decoding:
      codec: protobuf
      protobuf:
        desc_file: "/etc/vector/observer.desc"
        message_type: "observer.Record"

transforms:
  log_type_router:
    type: route
    inputs:
      - redis-observer
    route:
      event:
        source: .log_type == "EVENT"
        type: vrl
      runtime:
        source: .log_type == "RUNTIME"
        type: vrl
      input:
        source: .log_type == "INPUT"
        type: vrl
      output:
        source: .log_type == "OUTPUT"
        type: vrl
      feedback:
        source: .log_type == "FEEDBACK"
        type: vrl
      metadata:
        source: .log_type == "METADATA"
        type: vrl

  # todo: this is temporary until we get better conversion types for the rust-python interface
  event_parsed:
    type: remap
    inputs:
      - log_type_router.event
    source: |-
      if !is_nullish(.parameters) {
        .parameters = parse_json!(.parameters)
      } else {
        del(.parameters)
      }
      del(.log_type)

  runtime_parsed:
    type: remap
    inputs:
      - log_type_router.runtime
    source: |-
      del(.log_type)

  input_parsed:
    type: remap
    inputs:
      - log_type_router.input
    source: |-
      .field_value = parse_json!(.field_value)
      del(.log_type)

  output_parsed:
    type: remap
    inputs:
      - log_type_router.output
    source: |-
      .field_value = parse_json!(.field_value)
      del(.log_type)

  feedback_parsed:
    type: remap
    inputs:
      - log_type_router.feedback
    source: |-
      .field_value = parse_json!(.field_value)
      del(.log_type)

  metadata_parsed:
    type: remap
    inputs:
      - log_type_router.metadata
    source: |-
      del(.log_type)

sinks:
  out:
    inputs:
      - event_parsed
      - runtime_parsed
      - input_parsed
      - output_parsed
      - feedback_parsed
      - metadata_parsed
    type: "console"
    target: stderr
    encoding:
      codec: json

  clickhouse_event:
    inputs:
      - event_parsed
    type: clickhouse
    endpoint: http://clickhouse:8123
    database: ${PTOLEMY_CLICKHOUSE_DATABASE:-ptolemy}
    table: stg__event

  clickhouse_runtime:
    inputs:
      - runtime_parsed
    type: clickhouse
    endpoint: http://clickhouse:8123
    database: ${PTOLEMY_CLICKHOUSE_DATABASE:-ptolemy}
    table: stg__runtime

  clickhouse_input:
    inputs:
      - input_parsed
    type: clickhouse
    endpoint: http://clickhouse:8123
    database: ${PTOLEMY_CLICKHOUSE_DATABASE:-ptolemy}
    table: stg__input

  clickhouse_output:
    inputs:
      - output_parsed
    type: clickhouse
    endpoint: http://clickhouse:8123
    database: ${PTOLEMY_CLICKHOUSE_DATABASE:-ptolemy}
    table: stg__output

  clickhouse_feedback:
    inputs:
      - feedback_parsed
    type: clickhouse
    endpoint: http://clickhouse:8123
    database: ${PTOLEMY_CLICKHOUSE_DATABASE:-ptolemy}
    table: stg__feedback

  clickhouse_metadata:
    inputs:
      - metadata_parsed
    type: clickhouse
    endpoint: http://clickhouse:8123
    database: ${PTOLEMY_CLICKHOUSE_DATABASE:-ptolemy}
    table: stg__input
