mutation CreateUserApiKey($name: String!, $userId: Uuid!, $durationDays: Int) {
  user(userId: $userId) {
    createUserApiKey(name: $name, durationDays: $durationDays) {
      apiKey {
        apiKey
      }
      success
      error {
        field
        message
      }
    }
  }
}

mutation CreateUser($userId: Uuid!, $username: String!, $password: String!, $isAdmin: Boolean!, $displayName: String) {
  user(userId: $userId) {
    create(
      userData: {username: $username, password: $password, isSysadmin: false, isAdmin: $isAdmin, displayName: $displayName}
    ) {
        success
        error {
          field
          message
        }
      user {
        displayName
        id
        isAdmin
        isSysadmin
        status
        username
      }
    }
  }
}

mutation DeleteUserApiKey($apiKeyId: Uuid!, $userId: Uuid!) {
  user(userId: $userId) {
    deleteUserApiKey(apiKeyId: $apiKeyId) {
      success
      error {
        field
        message
      }
    }
  }
}

mutation DeleteUser($Id: Uuid!, $userId: Uuid!) {
  user(userId: $userId) {
    delete(id: $Id) {
      success
      error {
        field
        message
      }
    }
  }
}

mutation AddUserToWorkspace($userId: Uuid!, $targetUserId: Uuid!, $workspaceId: Uuid!, $role: WorkspaceRoleEnum!) {
  workspace(userId: $userId) {
    addUser(
      workspaceUser: {userId: $targetUserId, workspaceId: $workspaceId, role: $role}
    ) {
      success
      error {
        field
        message
      }
    }
  }
}

mutation ChangeWorkspaceUserRole($role: WorkspaceRoleEnum!, $targetUserId: Uuid!, $userId: Uuid!, $workspaceId: Uuid!) {
  workspace(userId: $userId) {
    changeWorkspaceUserRole(
      newRole: $role
      userId: $targetUserId
      workspaceId: $workspaceId
    ) {
      success
      error {
        field
        message
      }
    }
  }
}

mutation CreateServiceApiKey($name: String!, $permission: ApiKeyPermissionEnum!, $userId: Uuid!, $workspaceId: Uuid!, $durationDays: Int) {
  workspace(userId: $userId) {
    createServiceApiKey(
      name: $name
      permission: $permission
      workspaceId: $workspaceId
      durationDays: $durationDays
    ) {
          success
          error {
            field
            message
          }
      apiKey {
        apiKey
      }
    }
  }
}

mutation DeleteServiceApiKey($apiKeyId: Uuid!, $userId: Uuid!, $workspaceId: Uuid!) {
  workspace(userId: $userId) {
    deleteServiceApiKey(apiKeyId: $apiKeyId, workspaceId: $workspaceId) {
      success
      error {
        field
        message
      }
    }
  }
}

mutation CreateWorkspace($userId: Uuid!, $name: String!, $description: String, $adminUserId: Uuid!) {
  workspace(userId: $userId) {
    create(
      workspaceData: {name: $name, description: $description}
      adminUserId: $adminUserId
    ) {
          success
          error {
            field
            message
          }
      workspace {
        id
        name
        description
        archived
        createdAt
        updatedAt
      }
    }
  }
}

mutation RemoveUserFromWorkspace($targetUserId: Uuid!, $userId: Uuid!, $workspaceId: Uuid!) {
  workspace(userId: $userId) {
    removeUser(userId: $targetUserId, workspaceId: $workspaceId) {
          success
          error {
            field
            message
          }
    }
  }
}

mutation DeleteWorkspace($userId: Uuid!, $workspaceId: Uuid!) {
  workspace(userId: $userId) {
    delete(workspaceId: $workspaceId) {
          success
          error {
            field
            message
          }
    }
  }
}

mutation Login($username: String!, $password: String!) {
  auth(userData: {username: $username, password: $password}) {
    success
    error {
      field
      message
    }
    payload {
      token
      user {
        displayName
        id
        isAdmin
        isSysadmin
        status
        username
      }
    }
  }
}
