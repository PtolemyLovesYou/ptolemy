name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    # Only run this job if the PR was merged and has the version-bump label
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'version-bump')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get version from PR title
        id: get_version
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          # Extract version number from PR title (assuming format "Version: X.Y.Z")
          VERSION=$(echo "$PR_TITLE" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+(-[a-z]+\.[0-9]+)?' || echo "")
          
          if [ -z "$VERSION" ]; then
            # Fallback - try to get version from pyproject.toml
            VERSION=$(cat pyproject.toml | grep '^version = ".*"' | cut -d'"' -f2)
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Detected version: $VERSION"
          
      - name: Determine if prerelease
        id: prerelease
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          if [[ "$VERSION" == *-beta* || "$VERSION" == *-rc* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "This is a pre-release version"
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "This is a full release version"
          fi
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
