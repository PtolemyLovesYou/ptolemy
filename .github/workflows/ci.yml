name: Version
on:
  push:
    branches:
      - dev
      - beta
      - main
  workflow_dispatch:
    inputs:
      promotion:
        description: 'Branch to promote (dev->beta or beta->main)'
        required: true
        type: choice
        options:
          - dev-to-beta
          - beta-to-main

permissions:
  contents: write
  pull-requests: write
  statuses: write

jobs:
  version:
    runs-on: ubuntu-latest
    env:
      RUST_VERSION: 1.82.0
      MATURIN_VERSION: 1.8.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup | Force correct release branch on workflow sha
        if: github.event_name == 'push'
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
        
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      
      # Only update versions on push events, not on promotion
      - name: Update Version Numbers
        if: github.event_name == 'push'
        run: |
          sed -i "s/^version = .*/version = \"${GITVERSION_SEMVER}\"/" ptolemy/pyproject.toml
          sed -i "s/^version = .*/version = \"${GITVERSION_SEMVER}\"/" ptolemy/Cargo.toml
          sed -i "s/^version = .*/version = \"${GITVERSION_SEMVER}\"/" api/Cargo.toml

      - name: Commit Version Changes
        if: github.event_name == 'push'
        run: |
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          git add ptolemy/pyproject.toml ptolemy/Cargo.toml api/Cargo.toml
          git commit -m "chore: update version to ${GITVERSION_SEMVER}"
          git push origin ${{ github.ref_name }}

      - name: Create Promotion PR
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          
          # Set source and target based on promotion input
          if [[ "${{ inputs.promotion }}" == "dev-to-beta" ]]; then
            SOURCE_BRANCH="dev"
            TARGET_BRANCH="beta"
            PR_TITLE="chore: promote dev to beta"
          elif [[ "${{ inputs.promotion }}" == "beta-to-main" ]]; then
            SOURCE_BRANCH="beta"
            TARGET_BRANCH="main"
            PR_TITLE="chore: promote beta to main"
          else
            echo "Invalid promotion type"
            exit 1
          fi
          
          # Create a new branch for the promotion
          PROMOTION_BRANCH="${SOURCE_BRANCH}-to-${TARGET_BRANCH}-${GITVERSION_SEMVER}"
          
          # Fetch and checkout target branch first
          git fetch origin ${TARGET_BRANCH}
          git checkout -b ${PROMOTION_BRANCH} origin/${TARGET_BRANCH}
          
          # Merge source branch
          git fetch origin ${SOURCE_BRANCH}
          git merge origin/${SOURCE_BRANCH}
          
          # Push the new branch with changes
          git push origin ${PROMOTION_BRANCH}
          
          # Ensure the automated label exists
          gh label create automated --color "#0E8A16" --description "Automated PR" || true
          
          # Create pull request using GitHub CLI
          gh pr create \
            --base ${TARGET_BRANCH} \
            --head ${PROMOTION_BRANCH} \
            --title "${PR_TITLE}" \
            --body "Automated PR for version promotion" \
            --label "automated"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
