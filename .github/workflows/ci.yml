name: Version
on:
  # Only allow automatic version updates on dev
  push:
    branches:
      - dev
  # Manual promotions required for beta and main
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to merge into (beta or main)'
        required: true
        type: choice
        options:
          - beta
          - main

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    env:
      RUST_VERSION: 1.82.0
      MATURIN_VERSION: 1.8.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # For dev branch pushes
      - name: Setup | Force correct release branch on workflow sha
        if: github.event_name == 'push'
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}
      
      # For manual promotions to beta/main
      - name: Setup promotion branches
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          
          # Set source based on target
          SOURCE_BRANCH=""
          if [[ "${{ inputs.target_branch }}" == "beta" ]]; then
            SOURCE_BRANCH="dev"
          else
            SOURCE_BRANCH="beta"
          fi
          
          # Checkout target branch and merge from source
          git fetch origin ${{ inputs.target_branch }}
          git checkout ${{ inputs.target_branch }}
          git fetch origin ${SOURCE_BRANCH}
          git merge origin/${SOURCE_BRANCH} --no-edit
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
        
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      
      # Update version numbers
      - name: Update Version Numbers
        run: |
          sed -i "s/^version = .*/version = \"${GITVERSION_SEMVER}\"/" ptolemy/pyproject.toml
          sed -i "s/^version = .*/version = \"${GITVERSION_SEMVER}\"/" ptolemy/Cargo.toml
          sed -i "s/^version = .*/version = \"${GITVERSION_SEMVER}\"/" api/Cargo.toml

      # Commit and push changes
      - name: Commit Version Changes
        run: |
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "github-actions"
          git add ptolemy/pyproject.toml ptolemy/Cargo.toml api/Cargo.toml
          git commit -m "chore: update version to ${GITVERSION_SEMVER}"
          
          # Determine which branch to push to
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            git push origin ${{ inputs.target_branch }}
          else
            git push origin ${{ github.ref_name }}
          fi
