name: Version
on:
  push:
    branches:
      - dev
      - beta
      - main
permissions:
  contents: write
  pull-requests: write
  statuses: write
jobs:
  version:
    runs-on: ubuntu-latest
    env:
      RUST_VERSION: 1.82.0
      MATURIN_VERSION: 1.8.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup | Force correct release branch on workflow sha
        run: |
          git checkout -B ${{ github.ref_name }} ${{ github.sha }}
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: rustfmt, clippy
      
      - name: Cache Rust Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-
      
      - name: Cache Maturin
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/maturin
          key: ${{ runner.os }}-maturin-${{ env.MATURIN_VERSION }}
      
      - name: Install Maturin
        run: |
          if [ ! -f ~/.cargo/bin/maturin ]; then
            cargo install --version ${{ env.MATURIN_VERSION }} --force maturin
          fi
      
      - name: Action | Semantic Version
        if: github.ref == 'refs/heads/main'
        id: version-main
        uses: python-semantic-release/python-semantic-release@v9.20.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          build: false

      - name: Action | Semantic Version [Prerelease]
        if: github.ref != 'refs/heads/main'
        id: version-prerelease
        uses: python-semantic-release/python-semantic-release@v9.20.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"
          build: false
          build_metadata: "$(git rev-parse --short HEAD)"
          force: prerelease
