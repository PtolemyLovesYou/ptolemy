name: Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Type of version bump to perform'
        required: true
        type: choice
        options:
          - beta
          - rc
          - release
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: write

jobs:
  create-version-pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip uv \
            && uv venv \
            && uv pip install toml pydantic

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get current version
        id: current_version
        run: |
          echo "version=$(cat pyproject.toml | grep '^version = ".*"' | cut -d'"' -f2)" >> $GITHUB_OUTPUT

      # Create versioning branch
      - name: Create version branch
        id: create_branch
        run: |
          BRANCH_NAME="version/${{ github.event.inputs.version_type }}-$(date +'%Y%m%d%H%M%S')"
          git checkout -b $BRANCH_NAME
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      # Handle version bumping based on selected type
      - name: Bump version (beta/rc/release)
        if: |
          github.event.inputs.version_type == 'beta' || 
          github.event.inputs.version_type == 'rc' || 
          github.event.inputs.version_type == 'release'
        run: uv run bump_version.py ${{ github.event.inputs.version_type }}

      # Handle workflow dispatch for major/minor/patch
      - name: Bump version (major/minor/patch)
        if: |
          github.event.inputs.version_type == 'major' || 
          github.event.inputs.version_type == 'minor' || 
          github.event.inputs.version_type == 'patch'
        run: |
          if [ "${{ github.event.inputs.version_type }}" = "major" ]; then
            uv run bump_version.py mjr
          elif [ "${{ github.event.inputs.version_type }}" = "minor" ]; then
            uv run bump_version.py mnr
          else
            uv run bump_version.py patch
          fi

      # Get new version after bump
      - name: Get new version
        id: new_version
        run: |
          echo "version=$(cat pyproject.toml | grep '^version = ".*"' | cut -d'"' -f2)" >> $GITHUB_OUTPUT

      # Commit and push changes to the version branch
      - name: Commit version bump
        run: |
          git add pyproject.toml
          git add **/pyproject.toml || true
          git add **/Cargo.toml || true
          git commit -m "chore: bump version 🚀 ${{ steps.current_version.outputs.version }} → ${{ steps.new_version.outputs.version }}"
          git push --set-upstream origin ${{ steps.create_branch.outputs.branch_name }}

      # Create PR
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version ${{ steps.current_version.outputs.version }} → ${{ steps.new_version.outputs.version }}"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          title: "Version: ${{ steps.new_version.outputs.version }}"
          body: |
            # 🚀 Version Bump: ${{ steps.current_version.outputs.version }} → ${{ steps.new_version.outputs.version }} 🚀
            
            ✨ This PR was automatically created by the Version Management workflow to update the version number.
            
            📦 After merging this PR, a release will be created automatically.
            
            🏷️ Version type: `${{ github.event.inputs.version_type }}`
            
            💖 Thanks for keeping the project up to date! 💖
          base: main
          branch: ${{ steps.create_branch.outputs.branch_name }}
          draft: false
          labels: |
            version-bump
            automated-pr
